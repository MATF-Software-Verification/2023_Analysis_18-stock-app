--------------------------------------------------------------------------------
I1 cache:         32768 B, 64 B, 8-way associative
D1 cache:         32768 B, 64 B, 8-way associative
LL cache:         33554432 B, 64 B, direct-mapped
Command:          ../VisuAlgo/visuAlgo/build/visuAlgo
Data file:        cachegrind.out.15198
Events recorded:  Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Events shown:     Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Event sort order: Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Thresholds:       0.1 100 100 100 100 100 100 100 100
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
Ir                     I1mr                ILmr             Dr                   D1mr               DLmr             Dw                   D1mw               DLmw             
--------------------------------------------------------------------------------
3,031,747,109 (100.0%) 12,062,998 (100.0%) 178,322 (100.0%) 866,965,563 (100.0%) 9,486,937 (100.0%) 467,744 (100.0%) 421,357,139 (100.0%) 3,966,317 (100.0%) 824,448 (100.0%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir                     I1mr               ILmr            Dr                   D1mr               DLmr             Dw                   D1mw               DLmw              file:function
--------------------------------------------------------------------------------
1,319,485,595 (43.52%) 4,903,022 (40.65%) 93,552 (52.46%) 355,306,044 (40.98%) 2,428,061 (25.59%)  66,822 (14.29%) 200,750,046 (47.64%) 2,563,721 (64.64%) 442,949 (53.73%)  ???:???
  147,004,980 ( 4.85%)    46,450 ( 0.39%)     42 ( 0.02%)  45,895,675 ( 5.29%)     2,837 ( 0.03%)     188 ( 0.04%)  19,799,110 ( 4.70%)       142 ( 0.00%)      25 ( 0.00%)  ???:g_main_context_check
  129,064,151 ( 4.26%)    39,635 ( 0.33%)     47 ( 0.03%)  33,614,067 ( 3.88%)    32,766 ( 0.35%)     157 ( 0.03%)  22,804,195 ( 5.41%)     1,880 ( 0.05%)      15 ( 0.00%)  ???:g_main_context_prepare
   68,584,252 ( 2.26%)        20 ( 0.00%)     12 ( 0.01%)  20,873,468 ( 2.41%)         1 ( 0.00%)       0           11,927,696 ( 2.83%)         0                0           ./libio/./libio/iofread.c:fread
   67,963,625 ( 2.24%)    19,469 ( 0.16%)    122 ( 0.07%)  19,329,214 ( 2.23%)    21,997 ( 0.23%)     298 ( 0.06%)   4,052,019 ( 0.96%)        77 ( 0.00%)       0           ./nptl/./nptl/pthread_mutex_lock.c:pthread_mutex_lock@@GLIBC_2.2.5
   58,984,658 ( 1.95%)     5,498 ( 0.05%)    420 ( 0.24%)  21,088,868 ( 2.43%) 3,245,706 (34.21%)  24,768 ( 5.30%)   4,895,478 ( 1.16%)     3,235 ( 0.08%)     150 ( 0.02%)  ./elf/./elf/dl-lookup.c:do_lookup_x
   56,710,335 ( 1.87%)       107 ( 0.00%)     35 ( 0.02%)  19,395,401 ( 2.24%)         2 ( 0.00%)       0           11,931,296 ( 2.83%)         0                0           ./libio/./libio/fileops.c:_IO_file_xsgetn
   52,888,847 ( 1.74%)     2,325 ( 0.02%)      3 ( 0.00%)  19,232,308 ( 2.22%)    13,827 ( 0.15%)      98 ( 0.02%)           0                  0                0           ???:g_source_ref
   48,652,444 ( 1.60%)    17,493 ( 0.15%)     79 ( 0.04%)  14,346,143 ( 1.65%)       197 ( 0.00%)       2 ( 0.00%)   1,887,433 ( 0.45%)         5 ( 0.00%)       0           ./nptl/./nptl/pthread_mutex_unlock.c:pthread_mutex_unlock@@GLIBC_2.2.5
   47,008,938 ( 1.55%)     3,919 ( 0.03%)     10 ( 0.01%)  23,504,449 ( 2.71%)        52 ( 0.00%)       0                    0                  0                0           ???:g_mutex_unlock
   47,008,914 ( 1.55%)     4,160 ( 0.03%)     10 ( 0.01%)  23,504,447 ( 2.71%)     1,940 ( 0.02%)      60 ( 0.01%)           0                  0                0           ???:g_mutex_lock
   45,585,415 ( 1.50%)   152,062 ( 1.26%)    332 ( 0.19%)  13,378,254 ( 1.54%)    81,110 ( 0.85%)   8,073 ( 1.73%)   5,965,395 ( 1.42%)     6,162 ( 0.16%)      99 ( 0.01%)  ./malloc/./malloc/malloc.c:_int_free
   44,628,717 ( 1.47%)   331,743 ( 2.75%)  1,552 ( 0.87%)   7,956,620 ( 0.92%)   154,532 ( 1.63%)   5,789 ( 1.24%)   7,293,908 ( 1.73%)   177,979 ( 4.49%)  62,167 ( 7.54%)  ./malloc/./malloc/malloc.c:_int_malloc
   40,486,768 ( 1.34%)    10,655 ( 0.09%)     12 ( 0.01%)  11,396,476 ( 1.31%)    13,534 ( 0.14%)      94 ( 0.02%)   6,896,514 ( 1.64%)     2,922 ( 0.07%)      20 ( 0.00%)  ???:g_main_context_query
   32,116,432 ( 1.06%)    38,350 ( 0.32%)    312 ( 0.17%)   7,822,605 ( 0.90%)   532,928 ( 5.62%)  22,996 ( 4.92%)   5,955,815 ( 1.41%)   615,440 (15.52%) 151,528 (18.38%)  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__memcpy_avx_unaligned_erms
   30,134,171 ( 0.99%)    25,817 ( 0.21%)     51 ( 0.03%)  12,241,975 ( 1.41%)     2,253 ( 0.02%)       4 ( 0.00%)   7,533,503 ( 1.79%)     5,169 ( 0.13%)      31 ( 0.00%)  ./elf/../elf/dl-tls.c:_dl_update_slotinfo
   25,817,822 ( 0.85%)    47,244 ( 0.39%)    171 ( 0.10%)   6,792,458 ( 0.78%)    91,571 ( 0.97%)   3,141 ( 0.67%)   2,797,568 ( 0.66%)     5,799 ( 0.15%)      73 ( 0.01%)  ./malloc/./malloc/malloc.c:malloc
   20,264,394 ( 0.67%)    17,182 ( 0.14%)     14 ( 0.01%)   3,298,471 ( 0.38%)     2,941 ( 0.03%)       9 ( 0.00%)   2,099,240 ( 0.50%)         0                0           ???:QTimerInfoList::timerWait(timespec&)
   18,732,342 ( 0.62%)     1,631 ( 0.01%)     47 ( 0.03%)   2,641,012 ( 0.30%)     1,819 ( 0.02%)     256 ( 0.05%)           0                  0                0           ./string/../sysdeps/x86_64/multiarch/strchr-avx2.S:__strchr_avx2
   18,614,211 ( 0.61%)    12,852 ( 0.11%)     33 ( 0.02%)   7,203,292 ( 0.83%)     1,512 ( 0.02%)      33 ( 0.01%)   4,203,133 ( 1.00%)         8 ( 0.00%)       0           ???:_dbus_message_loader_queue_messages
   17,891,544 ( 0.59%)         9 ( 0.00%)      4 ( 0.00%)   7,454,810 ( 0.86%)         0                0            2,981,924 ( 0.71%)         0                0           ./libio/./libio/libioP.h:fread
   13,357,838 ( 0.44%)     7,223 ( 0.06%)     17 ( 0.01%)   4,247,817 ( 0.49%)     3,971 ( 0.04%)       4 ( 0.00%)   3,036,044 ( 0.72%)         0                0           ???:wl_display_flush
   13,279,971 ( 0.44%)     3,099 ( 0.03%)    396 ( 0.22%)   2,365,435 ( 0.27%)    74,852 ( 0.79%)  23,545 ( 5.03%)     892,942 ( 0.21%)     1,332 ( 0.03%)      84 ( 0.01%)  ./elf/./elf/dl-lookup.c:_dl_lookup_symbol_x
   13,183,576 ( 0.43%)     6,856 ( 0.06%)      8 ( 0.00%)   6,591,788 ( 0.76%)     2,595 ( 0.03%)      44 ( 0.01%)   1,883,368 ( 0.45%)     1,057 ( 0.03%)       4 ( 0.00%)  ./elf/../elf/dl-tls.c:update_get_addr
   13,063,184 ( 0.43%)     5,146 ( 0.04%)     33 ( 0.02%)   3,842,076 ( 0.44%)     7,874 ( 0.08%)      53 ( 0.01%)           0                  0                0           ./nptl/./nptl/pthread_getspecific.c:pthread_getspecific@@GLIBC_2.34
   12,610,448 ( 0.42%)    15,064 ( 0.12%)     43 ( 0.02%)   3,898,856 ( 0.45%)     2,083 ( 0.02%)      14 ( 0.00%)   3,598,944 ( 0.85%)       230 ( 0.01%)       2 ( 0.00%)  ???:QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)
   12,428,172 ( 0.41%)     1,615 ( 0.01%)     18 ( 0.01%)   3,516,547 ( 0.41%)    23,534 ( 0.25%)     273 ( 0.06%)   1,582,908 ( 0.38%)       167 ( 0.00%)       2 ( 0.00%)  ???:g_hash_table_lookup
   12,147,236 ( 0.40%)    23,336 ( 0.19%)    201 ( 0.11%)   4,385,768 ( 0.51%)    65,011 ( 0.69%)   4,166 ( 0.89%)   2,158,330 ( 0.51%)     1,760 ( 0.04%)       1 ( 0.00%)  ./malloc/./malloc/malloc.c:free
   11,927,800 ( 0.39%)        15 ( 0.00%)      7 ( 0.00%)   4,472,925 ( 0.52%)        78 ( 0.00%)       1 ( 0.00%)   1,490,975 ( 0.35%)         0                0           ./libio/./libio/genops.c:_IO_sgetn
   11,818,116 ( 0.39%)     6,256 ( 0.05%)     21 ( 0.01%)   2,483,796 ( 0.29%)     1,045 ( 0.01%)       4 ( 0.00%)   3,098,050 ( 0.74%)     1,438 ( 0.04%)       0           ???:wl_display_dispatch_queue_pending
   11,302,068 ( 0.37%)    15,026 ( 0.12%)     12 ( 0.01%)   4,709,505 ( 0.54%)     9,150 ( 0.10%)      22 ( 0.00%)   1,883,368 ( 0.45%)       621 ( 0.02%)      13 ( 0.00%)  ./elf/../sysdeps/x86_64/tls_get_addr.S:__tls_get_addr
   10,436,825 ( 0.34%)         0               0                    0                  0                0                    0                  0                0           ./libio/./libio/libioP.h:_IO_sgetn
   10,341,690 ( 0.34%)       209 ( 0.00%)     18 ( 0.01%)   2,635,586 ( 0.30%)        78 ( 0.00%)       8 ( 0.00%)   1,566,000 ( 0.37%)         2 ( 0.00%)       1 ( 0.00%)  ???:g_hash_table_replace
   10,089,757 ( 0.33%)    22,556 ( 0.19%)    241 ( 0.14%)   2,251,752 ( 0.26%)    49,516 ( 0.52%)   1,260 ( 0.27%)           0                  0                0           ./string/../sysdeps/x86_64/multiarch/strcmp-avx2.S:__strcmp_avx2
    9,989,344 ( 0.33%)     9,197 ( 0.08%)     19 ( 0.01%)   3,073,646 ( 0.35%)     8,299 ( 0.09%)     101 ( 0.02%)   1,536,823 ( 0.36%)       352 ( 0.01%)      16 ( 0.00%)  ???:g_private_get
    9,926,059 ( 0.33%)     8,406 ( 0.07%)     29 ( 0.02%)   2,707,107 ( 0.31%)     2,940 ( 0.03%)      19 ( 0.00%)           0                  0                0           ./time/../sysdeps/unix/sysv/linux/clock_gettime.c:clock_gettime@@GLIBC_2.17
    9,276,112 ( 0.31%)    36,124 ( 0.30%)     36 ( 0.02%)   3,441,613 ( 0.40%)     9,836 ( 0.10%)      68 ( 0.01%)   2,520,056 ( 0.60%)       333 ( 0.01%)       3 ( 0.00%)  ???:g_main_context_dispatch
    9,119,331 ( 0.30%)        48 ( 0.00%)      3 ( 0.00%)     824,357 ( 0.10%)     1,130 ( 0.01%)     765 ( 0.16%)           0                  0                0           ???:g_ascii_strncasecmp
    8,909,330 ( 0.29%)       629 ( 0.01%)      5 ( 0.00%)   1,273,135 ( 0.15%)     7,931 ( 0.08%)     709 ( 0.15%)           0                  0                0           ???:g_str_hash
    8,702,916 ( 0.29%)     7,897 ( 0.07%)      9 ( 0.01%)   1,800,606 ( 0.21%)         6 ( 0.00%)       0            2,100,720 ( 0.50%)         0                0           ???:g_main_context_acquire
    8,649,153 ( 0.29%)    10,277 ( 0.09%)    123 ( 0.07%)   1,761,112 ( 0.20%)   149,824 ( 1.58%)   2,421 ( 0.52%)   1,501,956 ( 0.36%)     2,547 ( 0.06%)     103 ( 0.01%)  ./malloc/./malloc/malloc.c:malloc_consolidate
    8,294,164 ( 0.27%)     9,664 ( 0.08%)      4 ( 0.00%)   2,457,819 ( 0.28%)    13,643 ( 0.14%)     427 ( 0.09%)           0                  0                0           ???:QObjectPrivate::maybeSignalConnected(unsigned int) const
    7,897,874 ( 0.26%)     2,108 ( 0.02%)     10 ( 0.01%)   1,822,560 ( 0.21%)     1,957 ( 0.02%)       2 ( 0.00%)   2,126,377 ( 0.50%)         0                0           ???:wl_display_prepare_read_queue
    7,231,480 ( 0.24%)     6,990 ( 0.06%)     14 ( 0.01%)   2,711,405 ( 0.31%)     1,947 ( 0.02%)       3 ( 0.00%)   2,109,155 ( 0.50%)         9 ( 0.00%)       0           ???:_dbus_connection_unlock
    7,054,613 ( 0.23%)    12,445 ( 0.10%)      4 ( 0.00%)   2,752,564 ( 0.32%)     3,026 ( 0.03%)       5 ( 0.00%)   1,531,178 ( 0.36%)     1,327 ( 0.03%)       0           ???:QtWaylandClient::QWaylandDisplay::flushRequests()
    6,994,161 ( 0.23%)     6,302 ( 0.05%)     41 ( 0.02%)   1,824,564 ( 0.21%)        72 ( 0.00%)      10 ( 0.00%)   1,824,564 ( 0.43%)     2,939 ( 0.07%)      16 ( 0.00%)  ./io/../sysdeps/unix/sysv/linux/poll.c:poll
    6,898,098 ( 0.23%)     4,489 ( 0.04%)      6 ( 0.00%)     899,748 ( 0.10%)       181 ( 0.00%)      10 ( 0.00%)   1,799,506 ( 0.43%)         0                0           ???:g_main_context_iteration
    6,851,234 ( 0.23%)       197 ( 0.00%)     90 ( 0.05%)   1,706,798 ( 0.20%)   155,502 ( 1.64%) 128,646 (27.50%)     695,566 ( 0.17%)   166,320 ( 4.19%) 136,866 (16.60%)  ./elf/../sysdeps/x86_64/dl-machine.h:_dl_relocate_object
    6,677,399 ( 0.22%)     8,038 ( 0.07%)     62 ( 0.03%)   2,427,213 ( 0.28%)        63 ( 0.00%)       2 ( 0.00%)   1,814,953 ( 0.43%)        48 ( 0.00%)       0           ./nptl/./nptl/pthread_cond_broadcast.c:pthread_cond_broadcast@@GLIBC_2.3.2
    6,602,140 ( 0.22%)     5,277 ( 0.04%)     24 ( 0.01%)   1,200,382 ( 0.14%)         0                0            1,200,418 ( 0.28%)         0                0           ???:g_thread_self
    6,593,884 ( 0.22%)     6,106 ( 0.05%)      4 ( 0.00%)   2,397,776 ( 0.28%)     3,885 ( 0.04%)       6 ( 0.00%)           0                  0                0           ???:g_io_channel_get_buffer_condition
    6,414,831 ( 0.21%)     9,362 ( 0.08%)     12 ( 0.01%)   1,221,264 ( 0.14%)         0                0              917,013 ( 0.22%)         0                0           ???:g_ptr_array_set_size
    6,400,539 ( 0.21%)     9,486 ( 0.08%)  1,061 ( 0.59%)   1,261,977 ( 0.15%)    78,119 ( 0.82%)   8,202 ( 1.75%)           0                  0                0           ./string/../sysdeps/x86_64/strcmp.S:strcmp
    6,370,052 ( 0.21%)     1,685 ( 0.01%)     24 ( 0.01%)   1,633,300 ( 0.19%)       386 ( 0.00%)       4 ( 0.00%)   1,306,695 ( 0.31%)       869 ( 0.02%)      14 ( 0.00%)  ???:g_slice_alloc
    6,174,744 ( 0.20%)     6,924 ( 0.06%)      9 ( 0.01%)   1,089,712 ( 0.13%)         6 ( 0.00%)       1 ( 0.00%)         872 ( 0.00%)         0                0           ???:QColor::rgba() const
    6,167,188 ( 0.20%)     5,496 ( 0.05%)      4 ( 0.00%)   1,546,499 ( 0.18%)    12,489 ( 0.13%)     153 ( 0.03%)           0                  0                0           ???:QMetaObject::activate(QObject*, QMetaObject const*, int, void**)
    5,994,420 ( 0.20%)     4,814 ( 0.04%)      6 ( 0.00%)   1,498,605 ( 0.17%)     4,013 ( 0.04%)       4 ( 0.00%)   1,498,605 ( 0.36%)         0                0           ???:dbus_connection_get_dispatch_status
    5,742,293 ( 0.19%)    10,731 ( 0.09%)    181 ( 0.10%)     828,127 ( 0.10%)    36,324 ( 0.38%)   4,909 ( 1.05%)           0                  0                0           ./string/../sysdeps/x86_64/multiarch/strlen-avx2.S:__strlen_avx2
    5,650,104 ( 0.19%)     7,560 ( 0.06%)     22 ( 0.01%)   2,825,052 ( 0.33%)         0                0                    0                  0                0           ./elf/../sysdeps/x86_64/dl-tls.c:__tls_get_addr_slow
    5,394,834 ( 0.18%)     5,599 ( 0.05%)      4 ( 0.00%)   1,198,852 ( 0.14%)       262 ( 0.00%)       0            1,198,852 ( 0.28%)         0                0           ???:wl_display_cancel_read
    5,077,983 ( 0.17%)       293 ( 0.00%)      8 ( 0.00%)   1,404,387 ( 0.16%)    11,804 ( 0.12%)       1 ( 0.00%)           0                  0                0           ???:FcStrSetMember
    5,046,484 ( 0.17%)       993 ( 0.01%)      2 ( 0.00%)   2,374,816 ( 0.27%)       522 ( 0.01%)      14 ( 0.00%)     593,704 ( 0.14%)         0                0           ???:QElapsedTimer::nsecsElapsed() const
    5,043,148 ( 0.17%)       721 ( 0.01%)      4 ( 0.00%)     890,404 ( 0.10%)       327 ( 0.00%)      14 ( 0.00%)     890,288 ( 0.21%)         0                0           /home/bob9952/Desktop/in5/ver/project/VisuAlgo/visuAlgo/build/../Resources/Walker.cpp:Walker::addVisitedNode(Node*)
    4,931,741 ( 0.16%)    35,637 ( 0.30%)     45 ( 0.03%)   1,790,937 ( 0.21%)    70,312 ( 0.74%)   2,296 ( 0.49%)     441,235 ( 0.10%)         0                0           ./malloc/./malloc/malloc.c:unlink_chunk.constprop.0
    4,842,077 ( 0.16%)    37,771 ( 0.31%)    240 ( 0.13%)   1,112,969 ( 0.13%)     1,825 ( 0.02%)      21 ( 0.00%)     629,111 ( 0.15%)     1,705 ( 0.04%)      24 ( 0.00%)  ./malloc/./malloc/malloc.c:realloc
    4,801,593 ( 0.16%)     5,125 ( 0.04%)      8 ( 0.00%)   1,200,390 ( 0.14%)         0                0            1,200,401 ( 0.28%)         0                0           ???:g_main_context_release
    4,657,100 ( 0.15%)     2,041 ( 0.02%)      3 ( 0.00%)   1,862,840 ( 0.21%)     1,623 ( 0.02%)       2 ( 0.00%)           0                  0                0           ???:wl_list_empty
    4,472,929 ( 0.15%)         0               0                    0                  0                0                    0                  0                0           ./libio/./libio/libioP.h:_IO_file_xsgetn
    4,376,369 ( 0.14%)    16,131 ( 0.13%)    436 ( 0.24%)     102,687 ( 0.01%)        38 ( 0.00%)       1 ( 0.00%)   3,153,651 ( 0.75%)    60,826 ( 1.53%)  12,160 ( 1.47%)  ./string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:__memset_avx2_unaligned_erms
    4,260,446 ( 0.14%)     8,600 ( 0.07%)     63 ( 0.04%)   1,638,640 ( 0.19%)    10,440 ( 0.11%)      18 ( 0.00%)     327,728 ( 0.08%)         0                0           ./nptl/./nptl/cancellation.c:__pthread_enable_asynccancel
    4,223,271 ( 0.14%)     2,632 ( 0.02%)      4 ( 0.00%)     904,770 ( 0.10%)         0                0              905,107 ( 0.21%)         2 ( 0.00%)       0           ???:_dbus_list_pop_first_link
    4,211,270 ( 0.14%)     4,782 ( 0.04%)      2 ( 0.00%)   1,203,220 ( 0.14%)         0                0            2,406,440 ( 0.57%)       111 ( 0.00%)       0           ???:QTimerInfoList::updateCurrentTime()
    3,955,830 ( 0.13%)    22,368 ( 0.19%)     18 ( 0.01%)   2,300,883 ( 0.27%)    59,364 ( 0.63%)   1,758 ( 0.38%)     438,082 ( 0.10%)         0                0           ???:QBrush::operator=(QBrush const&)
    3,852,888 ( 0.13%)       527 ( 0.00%)      0            1,481,880 ( 0.17%)       344 ( 0.00%)       0              592,752 ( 0.14%)         0                0           ???:QCoreApplication::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)
    3,666,997 ( 0.12%)     2,974 ( 0.02%)      2 ( 0.00%)   1,529,553 ( 0.18%)     3,983 ( 0.04%)      51 ( 0.01%)           0                  0                0           ???:QMetaObject::methodOffset() const
    3,517,394 ( 0.12%)       155 ( 0.00%)     68 ( 0.04%)     893,300 ( 0.10%)    84,979 ( 0.90%)  71,516 (15.29%)     150,593 ( 0.04%)        67 ( 0.00%)       0           ./elf/./elf/do-rel.h:_dl_relocate_object
    3,405,742 ( 0.11%)    62,156 ( 0.52%)    248 ( 0.14%)     848,205 ( 0.10%)    24,241 ( 0.26%)     156 ( 0.03%)     477,877 ( 0.11%)    15,228 ( 0.38%)     540 ( 0.07%)  ???:wl_display_read_events
    3,301,496 ( 0.11%)     2,559 ( 0.02%)      2 ( 0.00%)     900,408 ( 0.10%)         0                0              900,408 ( 0.21%)         0                0           ???:QTimerInfoList::repairTimersIfNeeded()
    3,290,753 ( 0.11%)       674 ( 0.01%)    165 ( 0.09%)     862,969 ( 0.10%)    36,452 ( 0.38%)   4,867 ( 1.04%)     285,387 ( 0.07%)        11 ( 0.00%)       0           ???:FcConfigSubstituteWithPat
    3,280,078 ( 0.11%)    42,436 ( 0.35%)    478 ( 0.27%)     720,645 ( 0.08%)     7,669 ( 0.08%)     115 ( 0.02%)     265,832 ( 0.06%)     1,518 ( 0.04%)      48 ( 0.01%)  ./malloc/./malloc/malloc.c:calloc
    3,265,372 ( 0.11%)       995 ( 0.01%)      2 ( 0.00%)     296,852 ( 0.03%)         0                0              296,852 ( 0.07%)         0                0           ???:QElapsedTimer::elapsed() const
    3,260,136 ( 0.11%)       962 ( 0.01%)      1 ( 0.00%)   1,185,504 ( 0.14%)         0                0            1,185,504 ( 0.28%)         0                0           /home/bob9952/Qt/6.5.3/gcc_64/include/QtCore/qflags.h:QFlags<QEventLoop::ProcessEventsFlag>::QFlags(QEventLoop::ProcessEventsFlag)
    3,233,452 ( 0.11%)       305 ( 0.00%)     15 ( 0.01%)     959,112 ( 0.11%)     1,512 ( 0.02%)       0              160,195 ( 0.04%)        79 ( 0.00%)       0           ???:g_hash_table_iter_next
    3,194,273 ( 0.11%)       335 ( 0.00%)     16 ( 0.01%)     458,833 ( 0.05%)         0                0              534,795 ( 0.13%)        37 ( 0.00%)       3 ( 0.00%)  ???:FcStrCmpIgnoreCase
    3,190,694 ( 0.11%)     8,511 ( 0.07%)      6 ( 0.00%)   1,853,390 ( 0.21%)    23,344 ( 0.25%)     674 ( 0.14%)     371,250 ( 0.09%)         0                0           ???:QBrush::~QBrush()
    3,151,678 ( 0.10%)    24,839 ( 0.21%)    136 ( 0.08%)     612,711 ( 0.07%)     8,499 ( 0.09%)     513 ( 0.11%)     429,329 ( 0.10%)     9,266 ( 0.23%)   6,642 ( 0.81%)  ./malloc/./malloc/malloc.c:_int_realloc
    3,108,926 ( 0.10%)     9,079 ( 0.08%)     22 ( 0.01%)     648,212 ( 0.07%)        66 ( 0.00%)       0              473,895 ( 0.11%)         0                0           ???:QPalette::setBrush(QPalette::ColorGroup, QPalette::ColorRole, QBrush const&)
    3,088,214 ( 0.10%)    22,440 ( 0.19%)     34 ( 0.02%)     493,654 ( 0.06%)     7,723 ( 0.08%)      19 ( 0.00%)     111,720 ( 0.03%)       789 ( 0.02%)       1 ( 0.00%)  ???:QColor::toHsv() const

--------------------------------------------------------------------------------
-- Auto-annotated source: /home/bob9952/Desktop/in5/ver/project/VisuAlgo/visuAlgo/build/../Resources/Walker.cpp
--------------------------------------------------------------------------------
Ir                 I1mr         ILmr        Dr               D1mr         DLmr        Dw               D1mw       DLmw       

        .            .           .                .            .           .                .          .          .           #include "../Headers/Walker.h"
        .            .           .                .            .           .                .          .          .           #include "../Headers/Node.h"
        .            .           .                .            .           .                .          .          .           #include "../Headers/Heuristic.h"
        .            .           .                .            .           .                .          .          .           #include "../Headers/Algorithm.h"
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           #include <QCoreApplication>
        .            .           .                .            .           .                .          .          .           #include <QElapsedTimer>
        .            .           .                .            .           .                .          .          .           
       40 ( 0.00%)   4 ( 0.00%)  4 ( 0.00%)       0            0           0               28 ( 0.00%) 0          0           Walker::Walker(Algorithm *algorithm,GridMatrix *gridMatrix,Heuristic *heuristic, const qint64 speed,QObject *parent)
        .            .           .                .            .           .                .          .          .               : QObject(parent),
        .            .           .                .            .           .                .          .          .               algorithm(algorithm),
        .            .           .                .            .           .                .          .          .               heuristic(heuristic),
        .            .           .                .            .           .                .          .          .               gridMatrix(gridMatrix),
      132 ( 0.00%)   5 ( 0.00%)  2 ( 0.00%)      56 ( 0.00%)   0           0               36 ( 0.00%) 2 ( 0.00%) 0               speed(speed)
        .            .           .                .            .           .                .          .          .           {
       12 ( 0.00%)   0           0                8 ( 0.00%)   0           0                0          0          0           }
        .            .           .                .            .           .                .          .          .           
      100 ( 0.00%)  12 ( 0.00%)  3 ( 0.00%)      16 ( 0.00%)   0           0               32 ( 0.00%) 0          0           Walker::~Walker()
        .            .           .                .            .           .                .          .          .           {
       16 ( 0.00%)   0           0                4 ( 0.00%)   0           0                4 ( 0.00%) 0          0               visitedNodes.clear();
       16 ( 0.00%)   0           0                4 ( 0.00%)   0           0                4 ( 0.00%) 0          0               pathNodes.clear();
       48 ( 0.00%)   4 ( 0.00%)  0               24 ( 0.00%)   0           0                8 ( 0.00%) 0          0           }
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           void Walker::addVisitedNode(Node *node)
    1,044 ( 0.00%) 116 ( 0.00%)  1 ( 0.00%)     116 ( 0.00%)   0           0              464 ( 0.00%) 0          0           {
      696 ( 0.00%) 116 ( 0.00%)  1 ( 0.00%)     232 ( 0.00%)   0           0              116 ( 0.00%) 0          0               visitedNodes.append(node);
      580 ( 0.00%)   0           0              232 ( 0.00%)   0           0              116 ( 0.00%) 0          0               emit nodeVisited(node);
        .            .           .                .            .           .                .          .          .           
      348 ( 0.00%)   1 ( 0.00%)  0                0            0           0              232 ( 0.00%) 0          0               QElapsedTimer timer;
      348 ( 0.00%) 116 ( 0.00%)  1 ( 0.00%)       0            0           0              116 ( 0.00%) 0          0               timer.start();
        .            .           .                .            .           .                .          .          .           
2,964,804 ( 0.10%) 256 ( 0.00%)  0          592,984 ( 0.07%) 261 ( 0.00%) 14 ( 0.00%) 296,492 ( 0.07%) 0          0               while (timer.elapsed() < speed) {
2,074,632 ( 0.07%)   0           0          296,376 ( 0.03%)   0           0          592,752 ( 0.14%) 0          0                   QCoreApplication::processEvents();
        .            .           .                .            .           .                .          .          .               }
      696 ( 0.00%) 116 ( 0.00%)  1 ( 0.00%)     464 ( 0.00%)  66 ( 0.00%)  0                0          0          0           }
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           void Walker::setPathNodes(const QVector<Node *> &NewPath)
        .            .           .                .            .           .                .          .          .           {
        .            .           .                .            .           .                .          .          .               pathNodes = NewPath;
        .            .           .                .            .           .                .          .          .           }
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           QVector<Node *> Walker::getPathNodes() const
        6 ( 0.00%)   0           0                0            0           0                3 ( 0.00%) 0          0           {
        6 ( 0.00%)   0           0                2 ( 0.00%)   0           0                1 ( 0.00%) 0          0               return pathNodes;
        3 ( 0.00%)   0           0                3 ( 0.00%)   0           0                0          0          0           }
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           
      174 ( 0.00%)  20 ( 0.00%)  2 ( 0.00%)       0            0           0               87 ( 0.00%) 0          0           void Walker::addNodeInPath(Node *node) {
      426 ( 0.00%)   0           0               53 ( 0.00%)   0           0               53 ( 0.00%) 0          0               if(!node->isStartNode() && !node->isEndNode()) {
      126 ( 0.00%)   1 ( 0.00%)  0               42 ( 0.00%)   0           0               21 ( 0.00%) 0          0                   pathNodes.append(node);
       63 ( 0.00%)   0           0               21 ( 0.00%)   0           0               21 ( 0.00%) 0          0                   node->onNodeInPath();
        .            .           .                .            .           .                .          .          .               }
       87 ( 0.00%)   3 ( 0.00%)  0               58 ( 0.00%)   0           0                0          0          0           }
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           void Walker::clearPath()
       35 ( 0.00%)   7 ( 0.00%)  1 ( 0.00%)       0            0           0               14 ( 0.00%) 0          0           {
       28 ( 0.00%)   3 ( 0.00%)  0                7 ( 0.00%)   0           0                7 ( 0.00%) 0          0               pathNodes.clear();
       28 ( 0.00%)   0           0                7 ( 0.00%)   0           0                7 ( 0.00%) 0          0               visitedNodes.clear();
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           
       21 ( 0.00%)   0           0               14 ( 0.00%)   0           0                0          0          0           }
        .            .           .                .            .           .                .          .          .           
       20 ( 0.00%)   4 ( 0.00%)  1 ( 0.00%)       0            0           0                8 ( 0.00%) 0          0           void Walker::calculatePath() {
        .            .           .                .            .           .                .          .          .           
       16 ( 0.00%)   0           0                4 ( 0.00%)   0           0                4 ( 0.00%) 0          0               timer.start();
        .            .           .                .            .           .                .          .          .           
       44 ( 0.00%)   4 ( 0.00%)  1 ( 0.00%)      28 ( 0.00%)   8 ( 0.00%)  4 ( 0.00%)       4 ( 0.00%) 0          0               algorithm->runAlgorithm(this);
       12 ( 0.00%)   4 ( 0.00%)  0                8 ( 0.00%)   4 ( 0.00%)  0                0          0          0           }
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           int Walker::totalWeight(const QVector<Node*> &path)
        .            .           .                .            .           .                .          .          .           {
        .            .           .                .            .           .                .          .          .               int totalWeight = 0;
        .            .           .                .            .           .                .          .          .               for(int i = 0; i < path.size(); ++i) {
        .            .           .                .            .           .                .          .          .                   Node* current = path[i];
        .            .           .                .            .           .                .          .          .                   totalWeight += current->getWeight();
        .            .           .                .            .           .                .          .          .               }
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .               return totalWeight;
        .            .           .                .            .           .                .          .          .           }
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           Node* Walker::getStartNode() const
       40 ( 0.00%)   7 ( 0.00%)  1 ( 0.00%)       0            0           0               16 ( 0.00%) 0          0           {
       32 ( 0.00%)   0           0               16 ( 0.00%)   0           0                0          0          0               if (gridMatrix) {
       40 ( 0.00%)   7 ( 0.00%)  1 ( 0.00%)      16 ( 0.00%)   0           0                8 ( 0.00%) 0          0                   return gridMatrix->getStartNode();
        .            .           .                .            .           .                .          .          .               }
        .            .           .                .            .           .                .          .          .               else {
        .            .           .                .            .           .                .          .          .                   return nullptr;
        .            .           .                .            .           .                .          .          .               }
       16 ( 0.00%)   0           0               16 ( 0.00%)   0           0                0          0          0           }
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           Node* Walker::getEndNode() const
       40 ( 0.00%)   0           0                0            0           0               16 ( 0.00%) 0          0           {
       32 ( 0.00%)   0           0               16 ( 0.00%)   0           0                0          0          0               if (gridMatrix)
       40 ( 0.00%)   7 ( 0.00%)  1 ( 0.00%)      16 ( 0.00%)   0           0                8 ( 0.00%) 0          0                   return gridMatrix->getEndNode();
        .            .           .                .            .           .                .          .          .               else
        .            .           .                .            .           .                .          .          .                   return nullptr;
       16 ( 0.00%)   0           0               16 ( 0.00%)   0           0                0          0          0           }
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           int Walker::getNumRows() const
       45 ( 0.00%)   0           0                0            0           0               18 ( 0.00%) 0          0           {
       36 ( 0.00%)   0           0               18 ( 0.00%)   0           0                0          0          0               if (gridMatrix)
       45 ( 0.00%)   0           0               18 ( 0.00%)   0           0                9 ( 0.00%) 0          0                   return gridMatrix->getNumRows();
        .            .           .                .            .           .                .          .          .               else
        .            .           .                .            .           .                .          .          .                   return -1;
       18 ( 0.00%)   0           0               18 ( 0.00%)   0           0                0          0          0           }
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           int Walker::getNumCols() const
      360 ( 0.00%)   0           0                0            0           0              144 ( 0.00%) 0          0           {
      288 ( 0.00%)   0           0              144 ( 0.00%)   0           0                0          0          0               if (gridMatrix)
      360 ( 0.00%)   0           0              144 ( 0.00%)   0           0               72 ( 0.00%) 0          0                   return gridMatrix->getNumCols();
        .            .           .                .            .           .                .          .          .               else
        .            .           .                .            .           .                .          .          .                   return -1;
      144 ( 0.00%)   0           0              144 ( 0.00%)   0           0                0          0          0           }
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           GridMatrix* Walker::getGridMatrix()
      272 ( 0.00%)   8 ( 0.00%)  2 ( 0.00%)       0            0           0              136 ( 0.00%) 0          0           {
      136 ( 0.00%)   0           0              136 ( 0.00%)   0           0                0          0          0               return gridMatrix;
      136 ( 0.00%)   0           0              136 ( 0.00%)   0           0                0          0          0           }
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           Heuristic* Walker::getHeuristic() const
        4 ( 0.00%)   0           0                0            0           0                2 ( 0.00%) 0          0           {
        2 ( 0.00%)   0           0                2 ( 0.00%)   0           0                0          0          0               return heuristic;
        2 ( 0.00%)   0           0                2 ( 0.00%)   0           0                0          0          0           }
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           void Walker::setVisitedWalker(Node *node, bool visited)
    1,368 ( 0.00%) 227 ( 0.00%) 57 ( 0.03%)     114 ( 0.00%)   0           0              684 ( 0.00%) 0          0           {
      228 ( 0.00%)   0           0              114 ( 0.00%)   0           0                0          0          0               if (node == nullptr) {
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .                   return;
        .            .           .                .            .           .                .          .          .               }
        .            .           .                .            .           .                .          .          .           
      570 ( 0.00%)   0           0              228 ( 0.00%)   0           0              114 ( 0.00%) 0          0               node->setVisited(visited);
        .            .           .                .            .           .                .          .          .           
    2,034 ( 0.00%) 114 ( 0.00%) 56 ( 0.03%)     340 ( 0.00%)   0           0              226 ( 0.00%) 0          0               if (visited && !node->isStartNode() && !node->isEndNode()) {
      756 ( 0.00%) 108 ( 0.00%) 29 ( 0.02%)     216 ( 0.00%)   0           0              216 ( 0.00%) 0          0                   elapsedTime = timer.elapsed();
      972 ( 0.00%)   0           0              324 ( 0.00%)   0           0              108 ( 0.00%) 0          0                   emit calculationFinished(elapsedTime);
        .            .           .                .            .           .                .          .          .           
    2,268 ( 0.00%) 216 ( 0.00%)  1 ( 0.00%)     108 ( 0.00%)   0           0              432 ( 0.00%) 0          0                   node->setBrush(QColor(255, 165, 0));
        .            .           .                .            .           .                .          .          .           
       30 ( 0.00%)   6 ( 0.00%)  0                6 ( 0.00%)   0           0                6 ( 0.00%) 0          0               } else if (node->isStartNode()) {
       26 ( 0.00%)   2 ( 0.00%)  0                2 ( 0.00%)   0           0                6 ( 0.00%) 0          0                   node->setBrush(Qt::yellow);
       20 ( 0.00%)   4 ( 0.00%)  1 ( 0.00%)       4 ( 0.00%)   0           0                4 ( 0.00%) 0          0               } else if (node->isEndNode()) {
       52 ( 0.00%)   4 ( 0.00%)  1 ( 0.00%)       4 ( 0.00%)   0           0               12 ( 0.00%) 0          0                   node->setBrush(Qt::blue);
        .            .           .                .            .           .                .          .          .               }else {
        .            .           .                .            .           .                .          .          .                   node->setBrush(QColor(106, 212, 157));
        .            .           .                .            .           .                .          .          .               }
      798 ( 0.00%) 336 ( 0.00%)  3 ( 0.00%)     570 ( 0.00%)   0           0                0          0          0           }
        .            .           .                .            .           .                .          .          .           
       28 ( 0.00%)   2 ( 0.00%)  0                0            0           0               16 ( 0.00%) 0          0           void Walker::reconstructPath(Walker* walker,Node* currentNode){
       92 ( 0.00%)   5 ( 0.00%)  0               32 ( 0.00%)   0           0                0          0          0               while (currentNode)
        .            .           .                .            .           .                .          .          .               {
      112 ( 0.00%)   0           0               28 ( 0.00%)   0           0               56 ( 0.00%) 0          0                   int nodeWeight = currentNode->getWeight();
      140 ( 0.00%)   4 ( 0.00%)  2 ( 0.00%)      56 ( 0.00%)   0           0               28 ( 0.00%) 0          0                   emit sendNodeWeight(nodeWeight);
      140 ( 0.00%)   0           0               56 ( 0.00%)   0           0               28 ( 0.00%) 0          0                   walker->addNodeInPath(currentNode);
      112 ( 0.00%)   0           0               28 ( 0.00%)   0           0               56 ( 0.00%) 0          0                   currentNode = currentNode->getParent();
        .            .           .                .            .           .                .          .          .               }
        .            .           .                .            .           .                .          .          .           
       12 ( 0.00%)   0           0                8 ( 0.00%)   0           0                0          0          0           }
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           bool Walker::getIsPathFound() {
        .            .           .                .            .           .                .          .          .               return isPathFound;
        .            .           .                .            .           .                .          .          .           }
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           
        .            .           .                .            .           .                .          .          .           void Walker::pathNotFound() {
        .            .           .                .            .           .                .          .          .               emit pathNotFoundSignal();
-- line 170 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /home/bob9952/Qt/6.5.3/gcc_64/include/QtCore/qflags.h
--------------------------------------------------------------------------------
Ir                 I1mr         ILmr       Dr                 D1mr       DLmr       Dw                 D1mw       DLmw       

-- line 23 ----------------------------------------
        .            .          .                  .          .          .                  .          .          .           #if !defined(Q_CC_MSVC)
        .            .          .                  .          .          .                  .          .          .               // Microsoft Visual Studio has buggy behavior when it comes to
        .            .          .                  .          .          .                  .          .          .               // unsigned enums: even if the enum is unsigned, the enum tags are
        .            .          .                  .          .          .                  .          .          .               // always signed
        .            .          .                  .          .          .                  .          .          .           #  if !defined(__LP64__) && !defined(Q_QDOC)
        .            .          .                  .          .          .                  .          .          .               constexpr inline Q_IMPLICIT QFlag(long value) noexcept : i(int(value)) {}
        .            .          .                  .          .          .                  .          .          .               constexpr inline Q_IMPLICIT QFlag(ulong value) noexcept : i(int(long(value))) {}
        .            .          .                  .          .          .                  .          .          .           #  endif
      330 ( 0.00%)  24 ( 0.00%) 1 ( 0.00%)       120 ( 0.00%) 0          0                120 ( 0.00%) 0          0               constexpr inline Q_IMPLICIT QFlag(uint value) noexcept : i(int(value)) {}
        .            .          .                  .          .          .                  .          .          .               constexpr inline Q_IMPLICIT QFlag(short value) noexcept : i(int(value)) {}
        .            .          .                  .          .          .                  .          .          .               constexpr inline Q_IMPLICIT QFlag(ushort value) noexcept : i(int(uint(value))) {}
      240 ( 0.00%)   0          0                120 ( 0.00%) 0          0                 60 ( 0.00%) 0          0               constexpr inline Q_IMPLICIT operator uint() const noexcept { return uint(i); }
        .            .          .                  .          .          .                  .          .          .           #endif
        .            .          .                  .          .          .                  .          .          .           };
        .            .          .                  .          .          .                  .          .          .           Q_DECLARE_TYPEINFO(QFlag, Q_PRIMITIVE_TYPE);
        .            .          .                  .          .          .                  .          .          .           
        .            .          .                  .          .          .                  .          .          .           class QIncompatibleFlag
        .            .          .                  .          .          .                  .          .          .           {
        .            .          .                  .          .          .                  .          .          .               int i;
        .            .          .                  .          .          .                  .          .          .           public:
-- line 42 ----------------------------------------
-- line 65 ----------------------------------------
        .            .          .                  .          .          .                  .          .          .               typedef typename std::conditional<
        .            .          .                  .          .          .                  .          .          .                       std::is_unsigned<typename std::underlying_type<Enum>::type>::value,
        .            .          .                  .          .          .                  .          .          .                       unsigned int,
        .            .          .                  .          .          .                  .          .          .                       signed int
        .            .          .                  .          .          .                  .          .          .                   >::type Int;
        .            .          .                  .          .          .                  .          .          .           #endif
        .            .          .                  .          .          .                  .          .          .               typedef Enum enum_type;
        .            .          .                  .          .          .                  .          .          .               // compiler-generated copy/move ctor/assignment operators are fine!
      549 ( 0.00%)  27 ( 0.00%) 1 ( 0.00%)       183 ( 0.00%) 0          0                183 ( 0.00%) 0          0               constexpr inline QFlags() noexcept : i(0) {}
3,261,137 ( 0.11%) 979 ( 0.01%) 4 ( 0.00%) 1,185,868 ( 0.14%) 0          0          1,185,868 ( 0.28%) 0          0               constexpr inline Q_IMPLICIT QFlags(Enum flags) noexcept : i(Int(flags)) {}
      420 ( 0.00%)   4 ( 0.00%) 0                 90 ( 0.00%) 0          0                150 ( 0.00%) 0          0               constexpr inline Q_IMPLICIT QFlags(QFlag flag) noexcept : i(flag) {}
        .            .          .                  .          .          .                  .          .          .           
        .            .          .                  .          .          .                  .          .          .               constexpr inline QFlags(std::initializer_list<Enum> flags) noexcept
        .            .          .                  .          .          .                  .          .          .                   : i(initializer_list_helper(flags.begin(), flags.end())) {}
        .            .          .                  .          .          .                  .          .          .           
        .            .          .                  .          .          .                  .          .          .               constexpr static inline QFlags fromInt(Int i) noexcept { return QFlags(QFlag(i)); }
        .            .          .                  .          .          .                  .          .          .               constexpr inline Int toInt() const noexcept { return i; }
        .            .          .                  .          .          .                  .          .          .           
        .            .          .                  .          .          .                  .          .          .           #ifndef QT_TYPESAFE_FLAGS
-- line 83 ----------------------------------------
-- line 95 ----------------------------------------
        .            .          .                  .          .          .                  .          .          .               constexpr inline explicit operator Int() const noexcept { return i; }
        .            .          .                  .          .          .                  .          .          .               constexpr inline explicit operator bool() const noexcept { return i; }
        .            .          .                  .          .          .                  .          .          .               // For some reason, moc goes through QFlag in order to read/write
        .            .          .                  .          .          .                  .          .          .               // properties of type QFlags; so a conversion to QFlag is also
        .            .          .                  .          .          .                  .          .          .               // needed here. (It otherwise goes through a QFlags->int->QFlag
        .            .          .                  .          .          .                  .          .          .               // conversion sequence.)
        .            .          .                  .          .          .                  .          .          .               constexpr inline explicit operator QFlag() const noexcept { return QFlag(i); }
        .            .          .                  .          .          .                  .          .          .           #else
      232 ( 0.00%)   0          0                116 ( 0.00%) 0          0                 58 ( 0.00%) 0          0               constexpr inline Q_IMPLICIT operator Int() const noexcept { return i; }
        .            .          .                  .          .          .                  .          .          .               constexpr inline bool operator!() const noexcept { return !i; }
        .            .          .                  .          .          .                  .          .          .           #endif
        .            .          .                  .          .          .                  .          .          .           
        .            .          .                  .          .          .                  .          .          .               constexpr inline QFlags operator|(QFlags other) const noexcept { return QFlags(QFlag(i | other.i)); }
       28 ( 0.00%)   1 ( 0.00%) 0                 10 ( 0.00%) 0          0                  6 ( 0.00%) 0          0               constexpr inline QFlags operator|(Enum other) const noexcept { return QFlags(QFlag(i | Int(other))); }
        .            .          .                  .          .          .                  .          .          .               constexpr inline QFlags operator^(QFlags other) const noexcept { return QFlags(QFlag(i ^ other.i)); }
        .            .          .                  .          .          .                  .          .          .               constexpr inline QFlags operator^(Enum other) const noexcept { return QFlags(QFlag(i ^ Int(other))); }
        .            .          .                  .          .          .                  .          .          .           #ifndef QT_TYPESAFE_FLAGS
        .            .          .                  .          .          .                  .          .          .               constexpr inline QFlags operator&(int mask) const noexcept { return QFlags(QFlag(i & mask)); }
        .            .          .                  .          .          .                  .          .          .               constexpr inline QFlags operator&(uint mask) const noexcept { return QFlags(QFlag(i & mask)); }
        .            .          .                  .          .          .                  .          .          .           #endif
        .            .          .                  .          .          .                  .          .          .               constexpr inline QFlags operator&(QFlags other) const noexcept { return QFlags(QFlag(i & other.i)); }
      812 ( 0.00%)  47 ( 0.00%) 1 ( 0.00%)       290 ( 0.00%) 0          0                174 ( 0.00%) 0          0               constexpr inline QFlags operator&(Enum other) const noexcept { return QFlags(QFlag(i & Int(other))); }
        .            .          .                  .          .          .                  .          .          .               constexpr inline QFlags operator~() const noexcept { return QFlags(QFlag(~i)); }
        .            .          .                  .          .          .                  .          .          .           
        .            .          .                  .          .          .                  .          .          .               constexpr inline void operator+(QFlags other) const noexcept = delete;
        .            .          .                  .          .          .                  .          .          .               constexpr inline void operator+(Enum other) const noexcept = delete;
        .            .          .                  .          .          .                  .          .          .               constexpr inline void operator+(int other) const noexcept = delete;
        .            .          .                  .          .          .                  .          .          .               constexpr inline void operator-(QFlags other) const noexcept = delete;
        .            .          .                  .          .          .                  .          .          .               constexpr inline void operator-(Enum other) const noexcept = delete;
        .            .          .                  .          .          .                  .          .          .               constexpr inline void operator-(int other) const noexcept = delete;
-- line 124 ----------------------------------------

--------------------------------------------------------------------------------
The following files chosen for auto-annotation could not be found:
--------------------------------------------------------------------------------
  ./elf/../elf/dl-tls.c
  ./elf/../sysdeps/x86_64/dl-machine.h
  ./elf/../sysdeps/x86_64/dl-tls.c
  ./elf/../sysdeps/x86_64/tls_get_addr.S
  ./elf/./elf/dl-lookup.c
  ./elf/./elf/do-rel.h
  ./io/../sysdeps/unix/sysv/linux/poll.c
  ./libio/./libio/fileops.c
  ./libio/./libio/genops.c
  ./libio/./libio/iofread.c
  ./libio/./libio/libioP.h
  ./malloc/./malloc/malloc.c
  ./nptl/./nptl/cancellation.c
  ./nptl/./nptl/pthread_cond_broadcast.c
  ./nptl/./nptl/pthread_getspecific.c
  ./nptl/./nptl/pthread_mutex_lock.c
  ./nptl/./nptl/pthread_mutex_unlock.c
  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S
  ./string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S
  ./string/../sysdeps/x86_64/multiarch/strchr-avx2.S
  ./string/../sysdeps/x86_64/multiarch/strcmp-avx2.S
  ./string/../sysdeps/x86_64/multiarch/strlen-avx2.S
  ./string/../sysdeps/x86_64/strcmp.S
  ./time/../sysdeps/unix/sysv/linux/clock_gettime.c

--------------------------------------------------------------------------------
Ir                 I1mr           ILmr         Dr                 D1mr         DLmr        Dw                 D1mw       DLmw       
--------------------------------------------------------------------------------
8,320,217 ( 0.27%) 2,931 ( 0.02%) 180 ( 0.10%) 2,080,656 ( 0.24%) 339 ( 0.00%) 18 ( 0.00%) 2,079,670 ( 0.49%) 2 ( 0.00%) 0           events annotated

